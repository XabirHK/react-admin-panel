[{"C:\\projects\\react-admin-panel\\src\\index.js":"1","C:\\projects\\react-admin-panel\\src\\registerServiceWorker.js":"2","C:\\projects\\react-admin-panel\\src\\App.js":"3","C:\\projects\\react-admin-panel\\src\\layouts\\DashboardLayout.js":"4","C:\\projects\\react-admin-panel\\src\\services\\auth.service.js":"5","C:\\projects\\react-admin-panel\\src\\services\\protected.route.js":"6","C:\\projects\\react-admin-panel\\src\\components\\login.component.js":"7","C:\\projects\\react-admin-panel\\src\\_nav.js":"8","C:\\projects\\react-admin-panel\\src\\vibe\\helpers\\handleTabAccessibility.js":"9","C:\\projects\\react-admin-panel\\src\\vibe\\index.js":"10","C:\\projects\\react-admin-panel\\src\\views\\index.js":"11","C:\\projects\\react-admin-panel\\src\\vibe\\components\\utilities\\ContextProviders\\index.js":"12","C:\\projects\\react-admin-panel\\src\\vibe\\components\\utilities\\Avatar\\Avatar.js":"13","C:\\projects\\react-admin-panel\\src\\vibe\\components\\Footer\\Footer.js":"14","C:\\projects\\react-admin-panel\\src\\vibe\\components\\Header\\Header.js":"15","C:\\projects\\react-admin-panel\\src\\vibe\\components\\Loader\\Loader.js":"16","C:\\projects\\react-admin-panel\\src\\vibe\\components\\Page\\SubNavigation.js":"17","C:\\projects\\react-admin-panel\\src\\vibe\\components\\Page\\Page.js":"18","C:\\projects\\react-admin-panel\\src\\vibe\\components\\Page\\PageContent.js":"19","C:\\projects\\react-admin-panel\\src\\vibe\\components\\PageLoader\\PageLoader.js":"20","C:\\projects\\react-admin-panel\\src\\vibe\\components\\PageAlert\\PageAlert.js":"21","C:\\projects\\react-admin-panel\\src\\vibe\\components\\utilities\\Switch\\Switch.js":"22","C:\\projects\\react-admin-panel\\src\\vibe\\components\\SidebarNav\\SidebarNav.js":"23","C:\\projects\\react-admin-panel\\src\\vibe\\components\\Chat\\Chat.js":"24","C:\\projects\\react-admin-panel\\src\\views\\pages\\Invoice.js":"25","C:\\projects\\react-admin-panel\\src\\views\\pages\\Analytics.js":"26","C:\\projects\\react-admin-panel\\src\\views\\pages\\Cms.js":"27","C:\\projects\\react-admin-panel\\src\\views\\pages\\BlankPage.js":"28","C:\\projects\\react-admin-panel\\src\\views\\pages\\SubNav.js":"29","C:\\projects\\react-admin-panel\\src\\views\\pages\\Widgets.js":"30","C:\\projects\\react-admin-panel\\src\\views\\pages\\Dashboard.js":"31","C:\\projects\\react-admin-panel\\src\\views\\pages\\404.js":"32","C:\\projects\\react-admin-panel\\src\\views\\pages\\Feed.js":"33","C:\\projects\\react-admin-panel\\src\\views\\elements\\Buttons.js":"34","C:\\projects\\react-admin-panel\\src\\views\\elements\\Alerts.js":"35","C:\\projects\\react-admin-panel\\src\\views\\elements\\Grid.js":"36","C:\\projects\\react-admin-panel\\src\\views\\elements\\Typography.js":"37","C:\\projects\\react-admin-panel\\src\\views\\elements\\Cards.js":"38","C:\\projects\\react-admin-panel\\src\\views\\elements\\Tabs.js":"39","C:\\projects\\react-admin-panel\\src\\views\\elements\\Tables.js":"40","C:\\projects\\react-admin-panel\\src\\views\\elements\\Forms.js":"41","C:\\projects\\react-admin-panel\\src\\views\\elements\\Breadcrumbs.js":"42","C:\\projects\\react-admin-panel\\src\\views\\elements\\ProgressBars.js":"43","C:\\projects\\react-admin-panel\\src\\views\\elements\\Loaders.js":"44","C:\\projects\\react-admin-panel\\src\\views\\elements\\Pagination.js":"45","C:\\projects\\react-admin-panel\\src\\views\\elements\\Modals.js":"46","C:\\projects\\react-admin-panel\\src\\components\\category\\Category.js":"47","C:\\projects\\react-admin-panel\\src\\views\\elements\\Avatars.js":"48","C:\\projects\\react-admin-panel\\src\\vibe\\components\\PageLoader\\PageLoaderContext.js":"49","C:\\projects\\react-admin-panel\\src\\vibe\\components\\PageAlert\\PageAlertContext.js":"50","C:\\projects\\react-admin-panel\\src\\vibe\\components\\Chat\\ChatElements.js":"51","C:\\projects\\react-admin-panel\\src\\vibe\\components\\SidebarNav\\components\\NavOverlay.js":"52","C:\\projects\\react-admin-panel\\src\\vibe\\components\\SidebarNav\\components\\NavDropdownItem.js":"53","C:\\projects\\react-admin-panel\\src\\vibe\\components\\Header\\components\\ToggleSidebarButton.js":"54","C:\\projects\\react-admin-panel\\src\\vibe\\components\\SidebarNav\\components\\NavSingleItem.js":"55","C:\\projects\\react-admin-panel\\src\\vibe\\components\\SidebarNav\\components\\NavSpacer.js":"56","C:\\projects\\react-admin-panel\\src\\vibe\\components\\SidebarNav\\components\\NavDivider.js":"57","C:\\projects\\react-admin-panel\\src\\services\\category.service.js":"58","C:\\projects\\react-admin-panel\\src\\components\\category\\AddCategory.js":"59","C:\\projects\\react-admin-panel\\src\\components\\category\\ListCatagiry.js":"60","C:\\projects\\react-admin-panel\\src\\views\\pages\\widgets\\ProfileWidget.js":"61","C:\\projects\\react-admin-panel\\src\\views\\pages\\widgets\\TabWidget.js":"62","C:\\projects\\react-admin-panel\\src\\views\\pages\\widgets\\StorageWiget.js":"63","C:\\projects\\react-admin-panel\\src\\views\\pages\\widgets\\AnalyticsWidget.js":"64","C:\\projects\\react-admin-panel\\src\\views\\pages\\widgets\\RatingWidget.js":"65","C:\\projects\\react-admin-panel\\src\\views\\pages\\widgets\\TrafficWidget.js":"66","C:\\projects\\react-admin-panel\\src\\vibe\\components\\SidebarNav\\components\\NavBadge.js":"67","C:\\projects\\react-admin-panel\\src\\http-common.js":"68","C:\\projects\\react-admin-panel\\src\\components\\register.component.js":"69","C:\\projects\\react-admin-panel\\src\\components\\post\\Posts.js":"70","C:\\projects\\react-admin-panel\\src\\components\\post\\AddPost.js":"71","C:\\projects\\react-admin-panel\\src\\services\\post.service.js":"72"},{"size":558,"mtime":1609519161675,"results":"73","hashOfConfig":"74"},{"size":4501,"mtime":1609519161676,"results":"75","hashOfConfig":"74"},{"size":3590,"mtime":1619868989851,"results":"76","hashOfConfig":"74"},{"size":5419,"mtime":1609519161675,"results":"77","hashOfConfig":"74"},{"size":1334,"mtime":1620440377041,"results":"78","hashOfConfig":"74"},{"size":699,"mtime":1619782147345,"results":"79","hashOfConfig":"74"},{"size":4019,"mtime":1609519161673,"results":"80","hashOfConfig":"74"},{"size":3183,"mtime":1620439867236,"results":"81","hashOfConfig":"74"},{"size":477,"mtime":1609519161689,"results":"82","hashOfConfig":"74"},{"size":827,"mtime":1609519161689,"results":"83","hashOfConfig":"74"},{"size":3722,"mtime":1619868989869,"results":"84","hashOfConfig":"74"},{"size":364,"mtime":1609519161688,"results":"85","hashOfConfig":"74"},{"size":363,"mtime":1609519161688,"results":"86","hashOfConfig":"74"},{"size":143,"mtime":1609519161679,"results":"87","hashOfConfig":"74"},{"size":1842,"mtime":1609519161680,"results":"88","hashOfConfig":"74"},{"size":703,"mtime":1609519161680,"results":"89","hashOfConfig":"74"},{"size":562,"mtime":1609519161683,"results":"90","hashOfConfig":"74"},{"size":482,"mtime":1609519161682,"results":"91","hashOfConfig":"74"},{"size":194,"mtime":1609519161683,"results":"92","hashOfConfig":"74"},{"size":635,"mtime":1609519161684,"results":"93","hashOfConfig":"74"},{"size":595,"mtime":1609519161683,"results":"94","hashOfConfig":"74"},{"size":321,"mtime":1609519161689,"results":"95","hashOfConfig":"74"},{"size":2169,"mtime":1609519161685,"results":"96","hashOfConfig":"74"},{"size":1862,"mtime":1609519161678,"results":"97","hashOfConfig":"74"},{"size":6900,"mtime":1609519161717,"results":"98","hashOfConfig":"74"},{"size":7355,"mtime":1609519161716,"results":"99","hashOfConfig":"74"},{"size":2900,"mtime":1609519161716,"results":"100","hashOfConfig":"74"},{"size":147,"mtime":1609519161716,"results":"101","hashOfConfig":"74"},{"size":292,"mtime":1609519161718,"results":"102","hashOfConfig":"74"},{"size":1233,"mtime":1609519161718,"results":"103","hashOfConfig":"74"},{"size":3526,"mtime":1609519161717,"results":"104","hashOfConfig":"74"},{"size":421,"mtime":1609519161715,"results":"105","hashOfConfig":"74"},{"size":5208,"mtime":1609519161717,"results":"106","hashOfConfig":"74"},{"size":5791,"mtime":1609519161711,"results":"107","hashOfConfig":"74"},{"size":4064,"mtime":1609519161710,"results":"108","hashOfConfig":"74"},{"size":4067,"mtime":1609519161712,"results":"109","hashOfConfig":"74"},{"size":16583,"mtime":1609519161714,"results":"110","hashOfConfig":"74"},{"size":2498,"mtime":1609519161711,"results":"111","hashOfConfig":"74"},{"size":2301,"mtime":1609519161714,"results":"112","hashOfConfig":"74"},{"size":3754,"mtime":1609519161714,"results":"113","hashOfConfig":"74"},{"size":2914,"mtime":1609519161712,"results":"114","hashOfConfig":"74"},{"size":800,"mtime":1609519161711,"results":"115","hashOfConfig":"74"},{"size":2139,"mtime":1609519161713,"results":"116","hashOfConfig":"74"},{"size":1594,"mtime":1609519161713,"results":"117","hashOfConfig":"74"},{"size":2003,"mtime":1609519161713,"results":"118","hashOfConfig":"74"},{"size":1428,"mtime":1609519161713,"results":"119","hashOfConfig":"74"},{"size":4579,"mtime":1620440082070,"results":"120","hashOfConfig":"74"},{"size":1459,"mtime":1609519161711,"results":"121","hashOfConfig":"74"},{"size":994,"mtime":1609519161685,"results":"122","hashOfConfig":"74"},{"size":762,"mtime":1609519161684,"results":"123","hashOfConfig":"74"},{"size":1615,"mtime":1609519161679,"results":"124","hashOfConfig":"74"},{"size":168,"mtime":1609519161687,"results":"125","hashOfConfig":"74"},{"size":1468,"mtime":1609519161686,"results":"126","hashOfConfig":"74"},{"size":582,"mtime":1609519161680,"results":"127","hashOfConfig":"74"},{"size":1291,"mtime":1609519161687,"results":"128","hashOfConfig":"74"},{"size":145,"mtime":1609519161687,"results":"129","hashOfConfig":"74"},{"size":132,"mtime":1609519161686,"results":"130","hashOfConfig":"74"},{"size":658,"mtime":1619869139729,"results":"131","hashOfConfig":"74"},{"size":8805,"mtime":1619868989856,"results":"132","hashOfConfig":"74"},{"size":1518,"mtime":1609519161673,"results":"133","hashOfConfig":"74"},{"size":961,"mtime":1609519161719,"results":"134","hashOfConfig":"74"},{"size":2086,"mtime":1609519161720,"results":"135","hashOfConfig":"74"},{"size":1657,"mtime":1609519161720,"results":"136","hashOfConfig":"74"},{"size":2343,"mtime":1609519161719,"results":"137","hashOfConfig":"74"},{"size":785,"mtime":1609519161719,"results":"138","hashOfConfig":"74"},{"size":564,"mtime":1609519161720,"results":"139","hashOfConfig":"74"},{"size":187,"mtime":1609519161686,"results":"140","hashOfConfig":"74"},{"size":385,"mtime":1620440427400,"results":"141","hashOfConfig":"74"},{"size":6613,"mtime":1609519161674,"results":"142","hashOfConfig":"74"},{"size":4678,"mtime":1619868989861,"results":"143","hashOfConfig":"74"},{"size":10341,"mtime":1619868989860,"results":"144","hashOfConfig":"74"},{"size":618,"mtime":1619868989865,"results":"145","hashOfConfig":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"104pngd",{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"148"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"148"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"148"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"148"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"148"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"148"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"C:\\projects\\react-admin-panel\\src\\index.js",[],["298","299"],"C:\\projects\\react-admin-panel\\src\\registerServiceWorker.js",[],"C:\\projects\\react-admin-panel\\src\\App.js",["300","301","302","303","304"],"import React, { Component } from 'react';\r\nimport {Route, Switch, Link, Redirect } from 'react-router-dom';\r\nimport DashboardLayout from './layouts/DashboardLayout';\r\nimport './vibe/scss/styles.scss';\r\nimport \"./App.css\";\r\n\r\nimport AuthService from \"./services/auth.service\";\r\nimport {ProtectedRoute} from \"./services/protected.route\";\r\n\r\nimport Login from \"./components/login.component\";\r\nimport SignUp from \"./components/register.component\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      showModeratorBoard: false,\r\n      showAdminBoard: false,\r\n      currentUser: undefined,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n    console.log('User is - ' +  user);\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\r\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\r\n      });\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n  }\r\n  \r\n\r\n  render() {\r\n    const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {/* <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n          <Link to={\"/\"} className=\"navbar-brand\">\r\n            bezKoder\r\n          </Link>\r\n          <div className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/home\"} className=\"nav-link\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n\r\n            {showModeratorBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/mod\"} className=\"nav-link\">\r\n                  Moderator Board\r\n                </Link>\r\n              </li>\r\n            )}\r\n\r\n            {showAdminBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/admin\"} className=\"nav-link\">\r\n                  Admin Board\r\n                </Link>\r\n              </li>\r\n            )}\r\n\r\n            {currentUser && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/user\"} className=\"nav-link\">\r\n                  User\r\n                </Link>\r\n              </li>\r\n            )}\r\n          </div>\r\n\r\n          {currentUser ? (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/profile\"} className=\"nav-link\">\r\n                  {currentUser.username}\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\r\n                  LogOut\r\n                </a>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/login\"} className=\"nav-link\">\r\n                  Login\r\n                </Link>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/register\"} className=\"nav-link\">\r\n                  Sign Up\r\n                </Link>\r\n              </li>\r\n            </div>\r\n          )}\r\n        </nav> */}\r\n\r\n        <div>\r\n          <Switch> \r\n            <Route exact path='/' component={Login} />\r\n            <Route exact path='/login' component={Login} />\r\n            <Route exact path='/signup' component={SignUp} />\r\n            <ProtectedRoute component={DashboardLayout} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\projects\\react-admin-panel\\src\\layouts\\DashboardLayout.js",["305","306"],"import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { Button, Badge, NavItem, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport { Header, SidebarNav, Footer, PageContent, Avatar, Chat, PageAlert, Page } from '../vibe';\r\nimport Logo from '../assets/images/vibe-logo.svg';\r\nimport avatar1 from '../assets/images/avatar1.png';\r\nimport nav from '../_nav';\r\nimport routes from '../views';\r\nimport ContextProviders from '../vibe/components/utilities/ContextProviders';\r\nimport handleKeyAccessibility, { handleClickAccessibility } from '../vibe/helpers/handleTabAccessibility';\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst MOBILE_SIZE = 992;\r\n\r\nexport default class DashboardLayout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //this.logOut = this.logOut.bind(this);\r\n    this.state = {\r\n      sidebarCollapsed: false,\r\n      isMobile: window.innerWidth <= MOBILE_SIZE,\r\n      showChat1: false,\r\n    };\r\n  }\r\n\r\n  handleResize = () => {\r\n    if (window.innerWidth <= MOBILE_SIZE) {\r\n      this.setState({ sidebarCollapsed: false, isMobile: true });\r\n    } else {\r\n      this.setState({ isMobile: false });\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prev) {\r\n    if (this.state.isMobile && prev.location.pathname !== this.props.location.pathname) {\r\n      this.toggleSideCollapse();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.handleResize);\r\n    document.addEventListener('keydown', handleKeyAccessibility);\r\n    document.addEventListener('click', handleClickAccessibility);\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.handleResize);\r\n  }\r\n\r\n  toggleSideCollapse = () => {\r\n    this.setState(prevState => ({ sidebarCollapsed: !prevState.sidebarCollapsed }));\r\n  };\r\n\r\n  closeChat = () => {\r\n    this.setState({ showChat1: false });\r\n  };\r\n\r\n  \r\n  render() {\r\n    const { sidebarCollapsed } = this.state;\r\n    const sidebarCollapsedClass = sidebarCollapsed ? 'side-menu-collapsed' : '';\r\n    return (\r\n      <ContextProviders>\r\n        <div className={`app ${sidebarCollapsedClass}`}>\r\n          <PageAlert />\r\n          <div className=\"app-body\">\r\n            <SidebarNav\r\n              nav={nav}\r\n              logo={Logo}\r\n              logoText=\"CMS.\"\r\n              isSidebarCollapsed={sidebarCollapsed}\r\n              toggleSidebar={this.toggleSideCollapse}\r\n              {...this.props}\r\n            />\r\n            <Page>\r\n              <Header\r\n                toggleSidebar={this.toggleSideCollapse}\r\n                isSidebarCollapsed={sidebarCollapsed}\r\n                routes={routes}\r\n                {...this.props}\r\n              >\r\n                <HeaderNav />\r\n              </Header>\r\n              <PageContent>\r\n                <Switch>\r\n                  {routes.map((page, key) => (\r\n                    <Route path={page.path} component={page.component} key={key} />\r\n                  ))}\r\n                  <Redirect from=\"/\" to=\"/home\" />\r\n                </Switch>\r\n              </PageContent>\r\n            </Page>\r\n          </div>\r\n          <Footer>\r\n            <span>Copyright © 2020 ZHK CMS. All rights reserved.</span>\r\n            <span>\r\n              <a href=\"#!\">Terms</a> | <a href=\"#!\">Privacy Policy</a>\r\n            </span>\r\n            <span className=\"ml-auto hidden-xs\">\r\n              Made with{'React-Bootstrap '}\r\n              <span role=\"img\" aria-label=\"taco\">\r\n                🌮\r\n              </span>\r\n            </span>\r\n          </Footer>\r\n          <Chat.Container>\r\n            {this.state.showChat1 && (\r\n              <Chat.ChatBox name=\"Messages\" status=\"online\" image={avatar1} close={this.closeChat} />\r\n            )}\r\n          </Chat.Container>\r\n        </div>\r\n      </ContextProviders>\r\n    );\r\n  }\r\n}\r\n\r\nfunction HeaderNav() {\r\n  return (\r\n    <React.Fragment>\r\n      <NavItem>\r\n        <form className=\"form-inline\">\r\n          <input className=\"form-control mr-sm-1\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n          <Button type=\"submit\" className=\"d-none d-sm-block\">\r\n            <i className=\"fa fa-search\" />\r\n          </Button>\r\n        </form>\r\n      </NavItem>\r\n      <UncontrolledDropdown nav inNavbar>\r\n        <DropdownToggle nav caret>\r\n          Account\r\n        </DropdownToggle>\r\n        <DropdownMenu right>\r\n          <DropdownItem>Profile</DropdownItem>\r\n          {/* <DropdownItem>User</DropdownItem> */}\r\n          <DropdownItem divider />\r\n          <DropdownItem>\r\n            <div>\r\n            <a href=\"/login\" className=\"nav-link\" onClick={AuthService.logout}>\r\n                  LogOut\r\n            </a>\r\n            </div>\r\n            {/* Message <Badge color=\"primary\">10</Badge> */}\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n      {/* <UncontrolledDropdown nav inNavbar>\r\n        <DropdownToggle nav>\r\n          <Avatar size=\"small\" color=\"blue\" initials=\"JS\" />\r\n        </DropdownToggle>\r\n        <DropdownMenu right>\r\n          <DropdownItem>Option 1</DropdownItem>\r\n          <DropdownItem>Option 2</DropdownItem>\r\n          <DropdownItem divider />\r\n          <DropdownItem>Reset</DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown> */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","C:\\projects\\react-admin-panel\\src\\services\\auth.service.js",[],"C:\\projects\\react-admin-panel\\src\\services\\protected.route.js",[],"C:\\projects\\react-admin-panel\\src\\components\\login.component.js",[],"C:\\projects\\react-admin-panel\\src\\_nav.js",["307"],"C:\\projects\\react-admin-panel\\src\\vibe\\helpers\\handleTabAccessibility.js",[],"C:\\projects\\react-admin-panel\\src\\vibe\\index.js",[],"C:\\projects\\react-admin-panel\\src\\views\\index.js",["308"],"import Dashboard from './pages/Dashboard';\r\nimport Buttons from './elements/Buttons';\r\nimport Alerts from './elements/Alerts';\r\nimport Grid from './elements/Grid';\r\nimport Typography from './elements/Typography';\r\nimport Cards from './elements/Cards';\r\nimport Tabs from './elements/Tabs';\r\nimport Tables from './elements/Tables';\r\nimport Breadcrumbs from './elements/Breadcrumbs';\r\nimport Forms from './elements/Forms';\r\nimport Loaders from './elements/Loaders';\r\nimport Avatars from './elements/Avatars';\r\nimport Invoice from './pages/Invoice';\r\nimport Analytics from './pages/Analytics';\r\nimport CmsPage from './pages/Cms';\r\nimport Widgets from './pages/Widgets';\r\nimport BlankPage from './pages/BlankPage';\r\nimport SubNav from './pages/SubNav';\r\nimport Feed from './pages/Feed';\r\nimport Modals from './elements/Modals';\r\nimport ProgressBars from './elements/ProgressBars';\r\nimport PaginationPage from './elements/Pagination';\r\nimport ErrorPage from './pages/404';\r\n\r\nimport Category from '../components/category/Category';\r\nimport AddCategory from '../components/category/AddCategory';\r\nimport AddPost from '../components/post/AddPost';\r\nimport Posts from '../components/post/Posts';\r\n\r\n// See React Router documentation for details: https://reacttraining.com/react-router/web/api/Route\r\nconst pageList = [\r\n  {\r\n    name: 'Dashboard',\r\n    path: '/home',\r\n    component: Analytics,\r\n  },\r\n  {\r\n    name: 'Categories',\r\n    path: '/categories',\r\n    component: Category,\r\n  },\r\n  {\r\n    name: 'Category',\r\n    path: '/category/add/:id',\r\n    component: AddCategory,\r\n  },\r\n  {\r\n    name: 'Posts',\r\n    path: '/posts',\r\n    component: Posts,\r\n  },\r\n  {\r\n    name: 'Add Post',\r\n    path: '/post/add/:id',\r\n    component: AddPost,\r\n  },\r\n  {\r\n    name: 'Buttons',\r\n    path: '/elements/buttons',\r\n    component: Buttons,\r\n  },\r\n  {\r\n    name: 'Alerts',\r\n    path: '/elements/alerts',\r\n    component: Alerts,\r\n  },\r\n  {\r\n    name: 'Grid',\r\n    path: '/elements/grid',\r\n    component: Grid,\r\n  },\r\n  {\r\n    name: 'Typography',\r\n    path: '/elements/typography',\r\n    component: Typography,\r\n  },\r\n  {\r\n    name: 'Cards',\r\n    path: '/elements/cards',\r\n    component: Cards,\r\n  },\r\n  {\r\n    name: 'Tabs',\r\n    path: '/elements/tabs',\r\n    component: Tabs,\r\n  },\r\n  {\r\n    name: 'Tables',\r\n    path: '/elements/tables',\r\n    component: Tables,\r\n  },\r\n  {\r\n    name: 'Progress Bars',\r\n    path: '/elements/progressbars',\r\n    component: ProgressBars,\r\n  },\r\n  {\r\n    name: 'Pagination',\r\n    path: '/elements/pagination',\r\n    component: PaginationPage,\r\n  },\r\n  {\r\n    name: 'Modals',\r\n    path: '/elements/modals',\r\n    component: Modals,\r\n  },\r\n  {\r\n    name: 'Breadcrumbs',\r\n    path: '/elements/breadcrumbs',\r\n    component: Breadcrumbs,\r\n  },\r\n  {\r\n    name: 'Forms',\r\n    path: '/elements/forms',\r\n    component: Forms,\r\n  },\r\n  {\r\n    name: 'Loaders',\r\n    path: '/elements/loaders',\r\n    component: Loaders,\r\n  },\r\n  {\r\n    name: 'Avatars',\r\n    path: '/elements/avatars',\r\n    component: Avatars,\r\n  },\r\n  {\r\n    name: 'Blank',\r\n    path: '/pages/blank',\r\n    component: BlankPage,\r\n  },\r\n  {\r\n    name: 'Sub Navigation',\r\n    path: '/pages/subnav',\r\n    component: SubNav,\r\n  },\r\n  {\r\n    name: '404',\r\n    path: '/pages/404',\r\n    component: ErrorPage,\r\n  },\r\n  {\r\n    name: 'Analytics',\r\n    path: '/apps/analytics',\r\n    component: Analytics,\r\n  },\r\n  {\r\n    name: 'Activity Feed',\r\n    path: '/apps/feed',\r\n    component: Feed,\r\n  },\r\n  {\r\n    name: 'Invoice',\r\n    path: '/apps/invoice',\r\n    component: Invoice,\r\n  },\r\n  {\r\n    name: 'CMS',\r\n    path: '/apps/cms',\r\n    component: CmsPage,\r\n  },\r\n  {\r\n    name: 'Widgets',\r\n    path: '/widgets',\r\n    component: Widgets,\r\n  },\r\n];\r\n\r\nexport default pageList;\r\n","C:\\projects\\react-admin-panel\\src\\vibe\\components\\utilities\\ContextProviders\\index.js",[],"C:\\projects\\react-admin-panel\\src\\vibe\\components\\utilities\\Avatar\\Avatar.js",[],"C:\\projects\\react-admin-panel\\src\\vibe\\components\\Footer\\Footer.js",[],"C:\\projects\\react-admin-panel\\src\\vibe\\components\\Header\\Header.js",[],"C:\\projects\\react-admin-panel\\src\\vibe\\components\\Loader\\Loader.js",[],"C:\\projects\\react-admin-panel\\src\\vibe\\components\\Page\\SubNavigation.js",[],"C:\\projects\\react-admin-panel\\src\\vibe\\components\\Page\\Page.js",[],"C:\\projects\\react-admin-panel\\src\\vibe\\components\\Page\\PageContent.js",[],"C:\\projects\\react-admin-panel\\src\\vibe\\components\\PageLoader\\PageLoader.js",[],"C:\\projects\\react-admin-panel\\src\\vibe\\components\\PageAlert\\PageAlert.js",[],"C:\\projects\\react-admin-panel\\src\\vibe\\components\\utilities\\Switch\\Switch.js",[],"C:\\projects\\react-admin-panel\\src\\vibe\\components\\SidebarNav\\SidebarNav.js",[],"C:\\projects\\react-admin-panel\\src\\vibe\\components\\Chat\\Chat.js",[],"C:\\projects\\react-admin-panel\\src\\views\\pages\\Invoice.js",[],"C:\\projects\\react-admin-panel\\src\\views\\pages\\Analytics.js",[],"C:\\projects\\react-admin-panel\\src\\views\\pages\\Cms.js",[],"C:\\projects\\react-admin-panel\\src\\views\\pages\\BlankPage.js",[],"C:\\projects\\react-admin-panel\\src\\views\\pages\\SubNav.js",[],"C:\\projects\\react-admin-panel\\src\\views\\pages\\Widgets.js",[],"C:\\projects\\react-admin-panel\\src\\views\\pages\\Dashboard.js",[],"C:\\projects\\react-admin-panel\\src\\views\\pages\\404.js",[],"C:\\projects\\react-admin-panel\\src\\views\\pages\\Feed.js",[],"C:\\projects\\react-admin-panel\\src\\views\\elements\\Buttons.js",[],"C:\\projects\\react-admin-panel\\src\\views\\elements\\Alerts.js",[],"C:\\projects\\react-admin-panel\\src\\views\\elements\\Grid.js",[],"C:\\projects\\react-admin-panel\\src\\views\\elements\\Typography.js",[],"C:\\projects\\react-admin-panel\\src\\views\\elements\\Cards.js",[],"C:\\projects\\react-admin-panel\\src\\views\\elements\\Tabs.js",[],"C:\\projects\\react-admin-panel\\src\\views\\elements\\Tables.js",[],"C:\\projects\\react-admin-panel\\src\\views\\elements\\Forms.js",[],"C:\\projects\\react-admin-panel\\src\\views\\elements\\Breadcrumbs.js",[],"C:\\projects\\react-admin-panel\\src\\views\\elements\\ProgressBars.js",[],"C:\\projects\\react-admin-panel\\src\\views\\elements\\Loaders.js",[],"C:\\projects\\react-admin-panel\\src\\views\\elements\\Pagination.js",[],"C:\\projects\\react-admin-panel\\src\\views\\elements\\Modals.js",[],"C:\\projects\\react-admin-panel\\src\\components\\category\\Category.js",["309","310","311","312","313"],"C:\\projects\\react-admin-panel\\src\\views\\elements\\Avatars.js",[],"C:\\projects\\react-admin-panel\\src\\vibe\\components\\PageLoader\\PageLoaderContext.js",[],"C:\\projects\\react-admin-panel\\src\\vibe\\components\\PageAlert\\PageAlertContext.js",[],"C:\\projects\\react-admin-panel\\src\\vibe\\components\\Chat\\ChatElements.js",[],"C:\\projects\\react-admin-panel\\src\\vibe\\components\\SidebarNav\\components\\NavOverlay.js",[],"C:\\projects\\react-admin-panel\\src\\vibe\\components\\SidebarNav\\components\\NavDropdownItem.js",[],"C:\\projects\\react-admin-panel\\src\\vibe\\components\\Header\\components\\ToggleSidebarButton.js",[],"C:\\projects\\react-admin-panel\\src\\vibe\\components\\SidebarNav\\components\\NavSingleItem.js",[],"C:\\projects\\react-admin-panel\\src\\vibe\\components\\SidebarNav\\components\\NavSpacer.js",[],"C:\\projects\\react-admin-panel\\src\\vibe\\components\\SidebarNav\\components\\NavDivider.js",[],"C:\\projects\\react-admin-panel\\src\\services\\category.service.js",[],"C:\\projects\\react-admin-panel\\src\\components\\category\\AddCategory.js",["314","315","316","317"],"import React, { Component } from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Button,\r\n    Table,\r\n    Modal, ModalHeader, ModalBody, ModalFooter,\r\n} from 'reactstrap';\r\n\r\nimport Category from './Category';\r\nimport CategoryDataService from \"../../services/category.service.js\";\r\n\r\nexport default class AddCategory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.retrieveCatagories = this.retrieveCatagories.bind(this);\r\n        this.saveOrUpdateCategory = this.saveOrUpdateCategory.bind(this);\r\n        this.clickCancelButton = this.clickCancelButton.bind(this);\r\n        this.state = {\r\n            modal: false,\r\n            id: this.props.match.params.id,\r\n            title: '',\r\n            description: '', \r\n            position: '',\r\n            status: 0,\r\n            parent: 0,\r\n            language:1,\r\n            submitted: false\r\n        };\r\n\r\n        // Category.toggle = Category.toggle.bind(Category.toggle);\r\n        //Category.loading = true;\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.retrieveCatagories();\r\n        this.loading = false;\r\n        if(this.state.id === '_add'){\r\n            return\r\n        }else{\r\n            CategoryDataService.get(this.state.id).then( (res) =>{\r\n                let category = res.data;\r\n\r\n                this.setState({\r\n                    title: category.title,\r\n                    description: category.description,\r\n                    position: category.position,\r\n                    status: category.status,\r\n                    parent: category.parent,\r\n                    language: category.language,\r\n                });\r\n            });\r\n        } \r\n    }\r\n    \r\n    changeTitleHandler= (event) => {\r\n        this.setState({title: event.target.value});\r\n    }\r\n    changeDescriptionHandler= (event) => {\r\n        this.setState({description: event.target.value});\r\n    }\r\n    changePositionHandler= (event) => {\r\n        this.setState({position: event.target.value});\r\n    }\r\n    changeStatusHandler= (event) => {\r\n        this.setState({status: event.target.value});\r\n    }\r\n    changeParentHandler= (event) => {\r\n        this.setState({parent: event.target.value});\r\n    }\r\n\r\n\r\n    saveOrUpdateCategory = (e) => {\r\n        e.preventDefault();\r\n        let category = {\r\n            //categoryId: this.state.id, \r\n            title: this.state.title,\r\n            description: this.state.description,\r\n            position: this.state.position,\r\n            status: this.state.status,\r\n            parent: this.state.parent,\r\n            language: this.state.language,\r\n        };\r\n        if(this.state.id === '_add'){\r\n            CategoryDataService.create(category).then(res =>{\r\n                this.props.history.push('/categories');\r\n            });\r\n        }else{\r\n            category.categoryId = this.state.id;\r\n            console.log(category);\r\n            CategoryDataService.update(category).then(res =>{\r\n                this.props.history.push('/categories');\r\n            });\r\n        }\r\n    }\r\n\r\n    clickCancelButton(){\r\n        this.props.history.push('/categories');\r\n    }\r\n\r\n    retrieveCatagories() {\r\n        CategoryDataService.getAll()\r\n        .then(response => {\r\n            this.setState({\r\n                catagories: response.data\r\n            });\r\n        })\r\n        .catch(e => {\r\n\r\n            //console.log(e);\r\n        });\r\n    }\r\n\r\n\r\n    getPageTitle(){\r\n        if(this.state.id === '_add'){\r\n            return <h3 className=\"text-center\">Add Category</h3>\r\n        }else{\r\n            return <h3 className=\"text-center\">Update Category</h3>\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n        const { catagories } = this.state;\r\n        return (\r\n            \r\n            <div>\r\n                {/* <form> */}\r\n                    <ModalHeader>{this.getPageTitle()}</ModalHeader>\r\n                    <ModalBody>\r\n                        <Row>\r\n                            <Col md={8}>\r\n                                <Card>\r\n                                    <CardBody>\r\n                                        <FormGroup>\r\n                                            <Label for=\"title\">Title</Label>\r\n                                            <Input type=\"text\" name=\"title\" id=\"title\" required\r\n                                            value={this.state.title} onChange={this.changeTitleHandler}/>\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <Label for=\"description\">Description</Label>\r\n                                            <Input type=\"textarea\" name=\"description\" id=\"description\" style={{height: 359}}\r\n                                            value={this.state.description} onChange={this.changeDescriptionHandler} />\r\n                                        </FormGroup>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                {/* <Button block className=\"m-b\">Position of the Category</Button> */}\r\n                                <Card>\r\n                                    <CardBody>\r\n                                        <div>\r\n                                        <FormGroup>\r\n                                            <Label for=\"position\">Place</Label>\r\n                                            <Input type=\"select\" name=\"position\" id=\"position\" required\r\n                                            value={this.state.position} onChange={this.changePositionHandler}>\r\n                                                <option value=''>Select</option>\r\n                                                <option value='header'>Header</option>\r\n                                                <option value='footer'>Footer</option>\r\n                                                <option value='side'>Side Panel</option>\r\n                                            </Input>\r\n                                        </FormGroup>\r\n                                        </div>\r\n                                    </CardBody>\r\n                                </Card>\r\n                                \r\n                                <Card>\r\n                                    <CardBody>\r\n                                        <div>\r\n                                        <FormGroup>\r\n                                            <Label for=\"parent\">Parent</Label>\r\n                                            <Input type=\"select\" name=\"parent\" id=\"parent\"\r\n                                            value={this.state.parent} onChange={this.changeParentHandler}>\r\n                                            <option defaultChecked value='0'>No Parent</option>\r\n                                            {catagories && catagories.map((catagory) => (\r\n                                                <option key = {catagory.categoryId} value={catagory.categoryId}> { catagory.title } </option>\r\n                                            ))}\r\n                                            </Input>\r\n                                        </FormGroup>\r\n                                        </div>\r\n                                    </CardBody>\r\n                                </Card>\r\n\r\n                                <Card>\r\n                                    <CardBody>\r\n                                        <div>\r\n                                        <FormGroup>\r\n                                            <Label for=\"position\">Status</Label>\r\n                                            <Input type=\"select\" name=\"status\" id=\"position\" required\r\n                                            value={this.state.status} onChange={this.changeStatusHandler}>\r\n                                                <option value='1'>Enabled</option>\r\n                                                <option value='0'>Disabled</option>\r\n                                            </Input>\r\n                                        </FormGroup>\r\n                                        </div>\r\n                                    </CardBody>\r\n                                </Card>                \r\n                            </Col>\r\n                        </Row>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button  color=\"primary\" onClick= {this.saveOrUpdateCategory}>Save</Button>{' '}\r\n                        <Button color=\"secondary\" onClick={this.clickCancelButton}>Cancel</Button>\r\n                    </ModalFooter>\r\n\r\n                {/* </form>       */}\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\projects\\react-admin-panel\\src\\components\\category\\ListCatagiry.js",[],["318","319"],"C:\\projects\\react-admin-panel\\src\\views\\pages\\widgets\\ProfileWidget.js",[],"C:\\projects\\react-admin-panel\\src\\views\\pages\\widgets\\TabWidget.js",[],"C:\\projects\\react-admin-panel\\src\\views\\pages\\widgets\\StorageWiget.js",[],"C:\\projects\\react-admin-panel\\src\\views\\pages\\widgets\\AnalyticsWidget.js",[],"C:\\projects\\react-admin-panel\\src\\views\\pages\\widgets\\RatingWidget.js",[],"C:\\projects\\react-admin-panel\\src\\views\\pages\\widgets\\TrafficWidget.js",[],"C:\\projects\\react-admin-panel\\src\\vibe\\components\\SidebarNav\\components\\NavBadge.js",[],"C:\\projects\\react-admin-panel\\src\\http-common.js",[],"C:\\projects\\react-admin-panel\\src\\components\\register.component.js",[],"C:\\projects\\react-admin-panel\\src\\components\\post\\Posts.js",["320","321","322","323","324","325","326"],"import React, { Component } from \"react\";\r\nimport {\r\n    Row,\r\n    Col,\r\n    CardHeader,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    Table,\r\n    Modal, \r\n} from 'reactstrap';\r\nimport CategoryDataService from \"../../services/category.service.js\";\r\nimport PostDataService from \"../../services/post.service.js\";\r\nimport { Loader } from '../../vibe/';\r\n//import AddCategory from \"./AddCategory\";\r\n\r\nexport default class Posts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.retrievePosts = this.retrievePosts.bind(this);\r\n        this.retrieveCatagories = this.retrieveCatagories.bind(this);\r\n        this.deletePost = this.deletePost.bind(this);\r\n        this.editPost = this.editPost.bind(this);\r\n        this.state = {\r\n            modal: false,\r\n            posts: []\r\n        };\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.loading = true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.retrievePosts();\r\n        this.retrieveCatagories();\r\n        this.loading = false;\r\n    }\r\n\r\n    retrievePosts() {\r\n        PostDataService.getAll()\r\n        .then(response => {\r\n        this.setState({\r\n            posts: response.data\r\n        });\r\n            //console.log(response.data);\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n    retrieveCatagories() {\r\n        CategoryDataService.getAll()\r\n        .then(response => {\r\n            this.setState({\r\n                catagories: response.data\r\n            });\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n    deletePost(id){\r\n        console.log('delete post id ' + id);\r\n        PostDataService.delete(id).then( res => {\r\n            this.setState({posts: this.state.posts.filter(post => post.id !== id)});\r\n        });\r\n    }\r\n    \r\n    editPost(id){\r\n        this.props.history.push(`/post/add/${id}`);\r\n    }\r\n\r\n    renderLoader(){\r\n        if(this.loading === true)\r\n           return (\r\n            <Col md={3} className='LoaderIcon'>\r\n                <Loader type=\"bars\" small />\r\n            </Col>\r\n           )\r\n        else   \r\n            return null;\r\n     }\r\n\r\n    toggle() {\r\n        this.props.history.push('/post/add/_add');\r\n    }\r\n    \r\n    render() {\r\n        const { catagories } = this.state;\r\n        return (\r\n            <div>\r\n                <h3 className=\"m-b\">Current Posts</h3>\r\n                <Row>\r\n                    { this.renderLoader() }\r\n                    <Col md=\"2\" style={{ margin: \"0\", padding: \"0\", marginLeft: \"auto\" }}>\r\n                    <Button block color=\"primary\" onClick={this.toggle} >Add New</Button>\r\n                    </Col>\r\n                </Row>        \r\n                <hr />\r\n                <Card>\r\n                <CardBody>\r\n                    <Table striped>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th className=\"w-25\">Title</th>\r\n                                <th>Category</th>\r\n                                {/* <th>Image Link</th> */}\r\n                                <th>Status</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            \r\n                            {this.state.posts.map(\r\n                                        (post, i) =>\r\n                            <tr key = {post.id}>\r\n                                <td>{++i}</td>\r\n                                <td>{post.title}</td>\r\n                                <td>{catagories && catagories.map((pCatagory) => (\r\n                                        pCatagory.categoryId == post.category ?  pCatagory.title : ''\r\n                                    ))}</td>\r\n                                {/* <td>{post.primaryPicture}</td> */}\r\n                                <td>{post.status == 1 ? 'Enabled' : 'Disabled'  }</td>\r\n                                <td>\r\n                                <Button onClick={ () => this.editPost(post.id)} color=\"primary\" size=\"sm\"><i className=\"fa fa-edit\"></i></Button>{' '}\r\n                                <Button onClick={ () => {if(window.confirm('Delete the item?')) this.deletePost(post.id)}} color=\"danger\"size=\"sm\"><i className=\"fa fa-trash\"></i></Button>\r\n                                </td>\r\n                            </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </Table>\r\n                </CardBody>\r\n                </Card>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\projects\\react-admin-panel\\src\\components\\post\\AddPost.js",["327","328","329","330","331","332"],"import React, { Component } from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Button,\r\n    Table,\r\n    Modal, ModalHeader, ModalBody, ModalFooter,\r\n} from 'reactstrap';\r\nimport ImageUploader from 'react-images-upload';\r\n\r\n\r\nimport CategoryDataService from \"../../services/category.service.js\";\r\nimport PostDataService from \"../../services/post.service.js\";\r\n\r\nexport default class AddPost extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.retrieveCatagories = this.retrieveCatagories.bind(this);\r\n        // this.savePost = this.savePost.bind(this);\r\n        this.clickCancelButton = this.clickCancelButton.bind(this);\r\n        // this.onDrop = this.onDrop.bind(this);\r\n        this.state = {\r\n            modal: false,\r\n            id: this.props.match.params.id,\r\n            title: '',\r\n            description: '', \r\n            tags: '',\r\n            status: 0,\r\n            language:1,\r\n            primaryPicture: '',\r\n            // pictures: [],\r\n            submitted: false \r\n        };\r\n\r\n        // Category.toggle = Category.toggle.bind(Category.toggle);\r\n        //Category.loading = true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.retrieveCatagories();\r\n        this.loading = false;\r\n\r\n        if(this.state.id === '_add'){\r\n            return\r\n        }else{\r\n            PostDataService.get(this.state.id).then( (res) =>{\r\n                let post = res.data;\r\n                this.setState({\r\n                    title: post.title,\r\n                    description: post.description,\r\n                    category: post.category,\r\n                    status: post.status,\r\n                    tags: post.tags,\r\n                    language: post.language,\r\n                    primaryPicture: post.primaryPicture,\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    \r\n    changeTitleHandler= (event) => {\r\n        this.setState({title: event.target.value});\r\n    }\r\n    changeDescriptionHandler= (event) => {\r\n        this.setState({description: event.target.value});\r\n    }\r\n    changeCategoryHandler= (event) => {\r\n        this.setState({category: event.target.value});\r\n    }\r\n    changeStatusHandler= (event) => {\r\n        this.setState({status: event.target.value});\r\n    }\r\n    changeTagsHandler= (event) => {\r\n        this.setState({tags: event.target.value});\r\n    }\r\n\r\n    changePrimaryPictureHandler= (event) => {\r\n        this.setState({primaryPicture: event.target.value});\r\n    }\r\n\r\n    // onDrop(picture) {\r\n    //     this.setState({\r\n    //         pictures: this.state.pictures.concat(picture),\r\n    //     });\r\n    // }\r\n\r\n    // savePost = (e) => {\r\n    //     e.preventDefault();\r\n    //     let post = {\r\n    //         title: this.state.title,\r\n    //         description: this.state.description,\r\n    //         category: this.state.category,\r\n    //         status: this.state.status,\r\n    //         tags: this.state.tags,\r\n    //         language: this.state.language,\r\n    //         primaryPicture: this.state.primaryPicture,\r\n    //     };\r\n        \r\n    //     PostDataService.create(post).then(res =>{\r\n    //         this.props.history.push('/posts');\r\n    //         //console.log(post);\r\n    //     });  \r\n    // }\r\n\r\n\r\n    saveOrUpdatePost = (e) => {\r\n        e.preventDefault();\r\n        let post = {\r\n            title: this.state.title,\r\n            description: this.state.description,\r\n            category: this.state.category,\r\n            status: this.state.status,\r\n            tags: this.state.tags,\r\n            language: this.state.language,\r\n            primaryPicture: this.state.primaryPicture,\r\n        };\r\n        if(this.state.id === '_add'){\r\n            PostDataService.create(post).then(res =>{\r\n                this.props.history.push('/posts');\r\n            });\r\n        }else{\r\n            post.id = this.state.id;\r\n            PostDataService.update(post).then(res =>{\r\n                this.props.history.push('/posts');\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    retrieveCatagories() {\r\n        CategoryDataService.getAll()\r\n        .then(response => {\r\n            this.setState({\r\n                catagories: response.data\r\n            });\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n    getPageTitle(){\r\n        if(this.state.id === '_add'){\r\n            return <h3 className=\"text-center\">Add Post</h3>\r\n        }else{\r\n            return <h3 className=\"text-center\">Update Post</h3>\r\n        }\r\n    }\r\n\r\n    clickCancelButton(){\r\n        this.props.history.push('/posts');\r\n    }\r\n\r\n    \r\n    render() {\r\n        const { catagories } = this.state;\r\n        var ttParagraph = 'Please use <p> </p> for paragraph';\r\n        var ttBold = 'Please use <b> </b> for Bold';\r\n        var ttImage = 'Please use <Img> </Img> for inserting image i.e. <Img>http://imagelink.com</Img> ';\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col md={8}>\r\n                        <Card>\r\n                            <CardBody>\r\n                                <FormGroup>\r\n                                    <Label for=\"title\">Title</Label>\r\n                                    <Input type=\"text\" name=\"title\" id=\"title\" required\r\n                                    defaultValue={this.state.title} onChange={this.changeTitleHandler}/>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"description\">Description</Label>\r\n                                    <small className=\"text-muted\">{ttParagraph}<br></br> {ttBold}<br></br> {ttImage}</small>\r\n                                    <p> </p>\r\n                                    <Input type=\"textarea\" name=\"description\" id=\"description\" style={{height: 550}}\r\n                                    value={this.state.description} onChange={this.changeDescriptionHandler} />\r\n                                </FormGroup>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        {/* <Button block className=\"m-b\">Position of the Category</Button> */}\r\n                        <Card>\r\n                            <CardBody>\r\n                                <div>\r\n                                <FormGroup>\r\n                                    <Label for=\"parent\">Parent</Label>\r\n                                    <Input type=\"select\" name=\"category\" id=\"category\"\r\n                                    value={this.state.category} onChange={this.changeCategoryHandler}>\r\n                                    <option defaultChecked value='0'>Miscellaneous</option>\r\n                                    {catagories && catagories.map((pCatagory) => (\r\n                                        <option key = {pCatagory.categoryId} value={pCatagory.categoryId}> { pCatagory.title } </option>\r\n                                    ))}\r\n                                    </Input>\r\n                                </FormGroup>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Card>\r\n                        {/* <Card>\r\n                            <CardBody>\r\n                                <div>\r\n                                <FormGroup>\r\n                                    <Label for=\"picture\">Image</Label>\r\n                                    <ImageUploader\r\n                                        withIcon={false}\r\n                                        withPreview={true}\r\n                                        singleImage={true}\r\n                                        buttonText='Choose images'\r\n                                        onChange={this.onDrop}\r\n                                        imgExtension={['.jpg', '.gif', '.png', '.gif']}\r\n                                        maxFileSize={5242880}\r\n                                    />\r\n                                </FormGroup>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Card> */}\r\n                        <Card>\r\n                            <CardHeader>Image Link</CardHeader>\r\n                            <CardBody>\r\n                                <FormGroup>\r\n                                    <Input type=\"text\" name=\"primaryPicture\" id=\"primaryPicture\" \r\n                                    defaultValue={this.state.primaryPicture} onChange={this.changePrimaryPictureHandler}/>\r\n                                </FormGroup>\r\n                            </CardBody>\r\n                        </Card>\r\n                        <Card>\r\n                            <CardHeader>Tags</CardHeader>\r\n                            <CardBody>\r\n                                <FormGroup>\r\n                                    <Input type=\"text\" name=\"tags\" id=\"tags\" \r\n                                    defaultValue={this.state.tags} onChange={this.changeTagsHandler}/>\r\n                                </FormGroup>\r\n                            </CardBody>\r\n                        </Card>\r\n                        \r\n                        <Card>\r\n                            <CardBody>\r\n                                <div>\r\n                                <FormGroup>\r\n                                    <Label for=\"position\">Status</Label>\r\n                                    <Input type=\"select\" name=\"status\" id=\"status\" required\r\n                                    value={this.state.status} onChange={this.changeStatusHandler}>\r\n                                        <option value='1'>Enabled</option>\r\n                                        <option value='0'>Disabled</option>\r\n                                    </Input>\r\n                                </FormGroup>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Card>\r\n                                        \r\n                    </Col>\r\n                </Row>\r\n\r\n                <Button  color=\"primary\" onClick= {this.saveOrUpdatePost}>Save</Button>{' '}\r\n                <Button color=\"secondary\" onClick={this.clickCancelButton}>Cancel</Button>       \r\n            </div>\r\n        )\r\n    }\r\n}","C:\\projects\\react-admin-panel\\src\\services\\post.service.js",[],{"ruleId":"333","replacedBy":"334"},{"ruleId":"335","replacedBy":"336"},{"ruleId":"337","severity":1,"message":"338","line":2,"column":24,"nodeType":"339","messageId":"340","endLine":2,"endColumn":28},{"ruleId":"337","severity":1,"message":"341","line":2,"column":30,"nodeType":"339","messageId":"340","endLine":2,"endColumn":38},{"ruleId":"337","severity":1,"message":"342","line":43,"column":13,"nodeType":"339","messageId":"340","endLine":43,"endColumn":24},{"ruleId":"337","severity":1,"message":"343","line":43,"column":26,"nodeType":"339","messageId":"340","endLine":43,"endColumn":44},{"ruleId":"337","severity":1,"message":"344","line":43,"column":46,"nodeType":"339","messageId":"340","endLine":43,"endColumn":60},{"ruleId":"337","severity":1,"message":"345","line":3,"column":18,"nodeType":"339","messageId":"340","endLine":3,"endColumn":23},{"ruleId":"337","severity":1,"message":"346","line":4,"column":51,"nodeType":"339","messageId":"340","endLine":4,"endColumn":57},{"ruleId":"347","severity":1,"message":"348","line":1,"column":1,"nodeType":"349","endLine":148,"endColumn":3},{"ruleId":"337","severity":1,"message":"350","line":1,"column":8,"nodeType":"339","messageId":"340","endLine":1,"endColumn":17},{"ruleId":"337","severity":1,"message":"351","line":5,"column":5,"nodeType":"339","messageId":"340","endLine":5,"endColumn":15},{"ruleId":"337","severity":1,"message":"352","line":6,"column":5,"nodeType":"339","messageId":"340","endLine":6,"endColumn":14},{"ruleId":"337","severity":1,"message":"353","line":7,"column":5,"nodeType":"339","messageId":"340","endLine":7,"endColumn":10},{"ruleId":"337","severity":1,"message":"354","line":8,"column":5,"nodeType":"339","messageId":"340","endLine":8,"endColumn":10},{"ruleId":"355","severity":1,"message":"356","line":117,"column":54,"nodeType":"357","messageId":"358","endLine":117,"endColumn":56},{"ruleId":"337","severity":1,"message":"351","line":6,"column":5,"nodeType":"339","messageId":"340","endLine":6,"endColumn":15},{"ruleId":"337","severity":1,"message":"359","line":12,"column":5,"nodeType":"339","messageId":"340","endLine":12,"endColumn":10},{"ruleId":"337","severity":1,"message":"360","line":13,"column":5,"nodeType":"339","messageId":"340","endLine":13,"endColumn":10},{"ruleId":"337","severity":1,"message":"361","line":16,"column":8,"nodeType":"339","messageId":"340","endLine":16,"endColumn":16},{"ruleId":"333","replacedBy":"362"},{"ruleId":"335","replacedBy":"363"},{"ruleId":"337","severity":1,"message":"351","line":5,"column":5,"nodeType":"339","messageId":"340","endLine":5,"endColumn":15},{"ruleId":"337","severity":1,"message":"352","line":6,"column":5,"nodeType":"339","messageId":"340","endLine":6,"endColumn":14},{"ruleId":"337","severity":1,"message":"353","line":7,"column":5,"nodeType":"339","messageId":"340","endLine":7,"endColumn":10},{"ruleId":"337","severity":1,"message":"354","line":8,"column":5,"nodeType":"339","messageId":"340","endLine":8,"endColumn":10},{"ruleId":"337","severity":1,"message":"360","line":13,"column":5,"nodeType":"339","messageId":"340","endLine":13,"endColumn":10},{"ruleId":"355","severity":1,"message":"356","line":126,"column":62,"nodeType":"357","messageId":"358","endLine":126,"endColumn":64},{"ruleId":"355","severity":1,"message":"356","line":129,"column":50,"nodeType":"357","messageId":"358","endLine":129,"endColumn":52},{"ruleId":"337","severity":1,"message":"359","line":12,"column":5,"nodeType":"339","messageId":"340","endLine":12,"endColumn":10},{"ruleId":"337","severity":1,"message":"360","line":13,"column":5,"nodeType":"339","messageId":"340","endLine":13,"endColumn":10},{"ruleId":"337","severity":1,"message":"364","line":13,"column":12,"nodeType":"339","messageId":"340","endLine":13,"endColumn":23},{"ruleId":"337","severity":1,"message":"365","line":13,"column":25,"nodeType":"339","messageId":"340","endLine":13,"endColumn":34},{"ruleId":"337","severity":1,"message":"366","line":13,"column":36,"nodeType":"339","messageId":"340","endLine":13,"endColumn":47},{"ruleId":"337","severity":1,"message":"367","line":15,"column":8,"nodeType":"339","messageId":"340","endLine":15,"endColumn":21},"no-native-reassign",["368"],"no-negated-in-lhs",["369"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'currentUser' is assigned a value but never used.","'showModeratorBoard' is assigned a value but never used.","'showAdminBoard' is assigned a value but never used.","'Badge' is defined but never used.","'Avatar' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Dashboard' is defined but never used.","'CardHeader' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Table' is defined but never used.","'Modal' is defined but never used.","'Category' is defined but never used.",["368"],["369"],"'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'ImageUploader' is defined but never used.","no-global-assign","no-unsafe-negation"]